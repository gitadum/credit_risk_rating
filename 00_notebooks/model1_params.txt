{'memory': None,
 'steps': [('columntransformer',
   ColumnTransformer(remainder='passthrough',
                     transformers=[('simpleimputer-1',
                                    SimpleImputer(strategy='median'),
                                    ['CNT_CHILDREN', 'AMT_INCOME_TOTAL',
                                     'AMT_CREDIT', 'AMT_ANNUITY',
                                     'AMT_GOODS_PRICE',
                                     'REGION_POPULATION_RELATIVE', 'DAYS_BIRTH',
                                     'DAYS_EMPLOYED', 'DAYS_REGISTRATION',
                                     'DAYS_ID_PUBLISH', 'OWN_CAR_AGE',
                                     'CNT_FAM_MEMBERS', 'REGION_RATING_CLIENT',
                                     'REGION_RAT...
                                                     SimpleImputer(fill_value='Unknown',
                                                                   strategy='constant')),
                                                    ('value_formatter',
                                                     FunctionTransformer(func=<function <lambda> at 0x7f1e9f7aa790>)),
                                                    ('encoder', OneHotEncoder())]),
                                    ['NAME_TYPE_SUITE', 'NAME_INCOME_TYPE',
                                     'NAME_EDUCATION_TYPE', 'NAME_FAMILY_STATUS',
                                     'NAME_HOUSING_TYPE', 'OCCUPATION_TYPE',
                                     'ORGANIZATION_TYPE', 'FONDKAPREMONT_MODE',
                                     'HOUSETYPE_MODE', 'WALLSMATERIAL_MODE'])])),
  ('randomforestclassifier', RandomForestClassifier())],
 'verbose': False,
 'columntransformer': ColumnTransformer(remainder='passthrough',
                   transformers=[('simpleimputer-1',
                                  SimpleImputer(strategy='median'),
                                  ['CNT_CHILDREN', 'AMT_INCOME_TOTAL',
                                   'AMT_CREDIT', 'AMT_ANNUITY',
                                   'AMT_GOODS_PRICE',
                                   'REGION_POPULATION_RELATIVE', 'DAYS_BIRTH',
                                   'DAYS_EMPLOYED', 'DAYS_REGISTRATION',
                                   'DAYS_ID_PUBLISH', 'OWN_CAR_AGE',
                                   'CNT_FAM_MEMBERS', 'REGION_RATING_CLIENT',
                                   'REGION_RAT...
                                                   SimpleImputer(fill_value='Unknown',
                                                                 strategy='constant')),
                                                  ('value_formatter',
                                                   FunctionTransformer(func=<function <lambda> at 0x7f1e9f7aa790>)),
                                                  ('encoder', OneHotEncoder())]),
                                  ['NAME_TYPE_SUITE', 'NAME_INCOME_TYPE',
                                   'NAME_EDUCATION_TYPE', 'NAME_FAMILY_STATUS',
                                   'NAME_HOUSING_TYPE', 'OCCUPATION_TYPE',
                                   'ORGANIZATION_TYPE', 'FONDKAPREMONT_MODE',
                                   'HOUSETYPE_MODE', 'WALLSMATERIAL_MODE'])]),
 'randomforestclassifier': RandomForestClassifier(),
 'columntransformer__n_jobs': None,
 'columntransformer__remainder': 'passthrough',
 'columntransformer__sparse_threshold': 0.3,
 'columntransformer__transformer_weights': None,
 'columntransformer__transformers': [('simpleimputer-1',
   SimpleImputer(strategy='median'),
   ['CNT_CHILDREN',
    'AMT_INCOME_TOTAL',
    'AMT_CREDIT',
    'AMT_ANNUITY',
    'AMT_GOODS_PRICE',
    'REGION_POPULATION_RELATIVE',
    'DAYS_BIRTH',
    'DAYS_EMPLOYED',
    'DAYS_REGISTRATION',
    'DAYS_ID_PUBLISH',
    'OWN_CAR_AGE',
    'CNT_FAM_MEMBERS',
    'REGION_RATING_CLIENT',
    'REGION_RATING_CLIENT_W_CITY',
    'HOUR_APPR_PROCESS_START',
    'EXT_SOURCE_1',
    'EXT_SOURCE_2',
    'EXT_SOURCE_3',
    'OBS_30_CNT_SOCIAL_CIRCLE',
    'DEF_30_CNT_SOCIAL_CIRCLE',
    'OBS_60_CNT_SOCIAL_CIRCLE',
    'DEF_60_CNT_SOCIAL_CIRCLE',
    'DAYS_LAST_PHONE_CHANGE',
    'AMT_REQ_CREDIT_BUREAU_HOUR',
    'AMT_REQ_CREDIT_BUREAU_DAY',
    'AMT_REQ_CREDIT_BUREAU_WEEK',
    'AMT_REQ_CREDIT_BUREAU_MON',
    'AMT_REQ_CREDIT_BUREAU_QRT',
    'AMT_REQ_CREDIT_BUREAU_YEAR']),
  ('simpleimputer-2',
   SimpleImputer(),
   ['APARTMENTS_AVG',
    'BASEMENTAREA_AVG',
    'YEARS_BEGINEXPLUATATION_AVG',
    'YEARS_BUILD_AVG',
    'COMMONAREA_AVG',
    'ELEVATORS_AVG',
    'ENTRANCES_AVG',
    'FLOORSMAX_AVG',
    'FLOORSMIN_AVG',
    'LANDAREA_AVG',
    'LIVINGAPARTMENTS_AVG',
    'LIVINGAREA_AVG',
    'NONLIVINGAPARTMENTS_AVG',
    'NONLIVINGAREA_AVG']),
  ('simpleimputer-3',
   SimpleImputer(strategy='median'),
   ['APARTMENTS_MEDI',
    'BASEMENTAREA_MEDI',
    'YEARS_BEGINEXPLUATATION_MEDI',
    'YEARS_BUILD_MEDI',
    'COMMONAREA_MEDI',
    'ELEVATORS_MEDI',
    'ENTRANCES_MEDI',
    'FLOORSMAX_MEDI',
    'FLOORSMIN_MEDI',
    'LANDAREA_MEDI',
    'LIVINGAPARTMENTS_MEDI',
    'LIVINGAREA_MEDI',
    'NONLIVINGAPARTMENTS_MEDI',
    'NONLIVINGAREA_MEDI']),
  ('simpleimputer-4',
   SimpleImputer(strategy='most_frequent'),
   ['APARTMENTS_MODE',
    'BASEMENTAREA_MODE',
    'YEARS_BEGINEXPLUATATION_MODE',
    'YEARS_BUILD_MODE',
    'COMMONAREA_MODE',
    'ELEVATORS_MODE',
    'ENTRANCES_MODE',
    'FLOORSMAX_MODE',
    'FLOORSMIN_MODE',
    'LANDAREA_MODE',
    'LIVINGAPARTMENTS_MODE',
    'LIVINGAREA_MODE',
    'NONLIVINGAPARTMENTS_MODE',
    'NONLIVINGAREA_MODE',
    'TOTALAREA_MODE']),
  ('pipeline-1',
   Pipeline(steps=[('nan_imputer', SimpleImputer(strategy='most_frequent')),
                   ('xna_imputer',
                    SimpleImputer(missing_values='XNA', strategy='most_frequent')),
                   ('encoder',
                    OrdinalEncoder(categories=[['Cash loans', 'Revolving loans'],
                                               ['N', 'Y'], ['N', 'Y'],
                                               ['No', 'Yes'], ['M', 'F'],
                                               ['MONDAY', 'TUESDAY', 'WEDNESDAY',
                                                'THURSDAY', 'FRIDAY', 'SATURDAY',
                                                'SUNDAY']]))]),
   ['NAME_CONTRACT_TYPE',
    'FLAG_OWN_CAR',
    'FLAG_OWN_REALTY',
    'EMERGENCYSTATE_MODE',
    'CODE_GENDER',
    'WEEKDAY_APPR_PROCESS_START']),
  ('pipeline-2',
   Pipeline(steps=[('imputer', SimpleImputer(strategy='most_frequent'))]),
   ['FLAG_MOBIL',
    'FLAG_EMP_PHONE',
    'FLAG_WORK_PHONE',
    'FLAG_CONT_MOBILE',
    'FLAG_PHONE',
    'FLAG_EMAIL',
    'REG_REGION_NOT_LIVE_REGION',
    'REG_REGION_NOT_WORK_REGION',
    'LIVE_REGION_NOT_WORK_REGION',
    'REG_CITY_NOT_LIVE_CITY',
    'REG_CITY_NOT_WORK_CITY',
    'LIVE_CITY_NOT_WORK_CITY',
    'FLAG_DOCUMENT_2',
    'FLAG_DOCUMENT_3',
    'FLAG_DOCUMENT_4',
    'FLAG_DOCUMENT_5',
    'FLAG_DOCUMENT_6',
    'FLAG_DOCUMENT_7',
    'FLAG_DOCUMENT_8',
    'FLAG_DOCUMENT_9',
    'FLAG_DOCUMENT_10',
    'FLAG_DOCUMENT_11',
    'FLAG_DOCUMENT_12',
    'FLAG_DOCUMENT_13',
    'FLAG_DOCUMENT_14',
    'FLAG_DOCUMENT_15',
    'FLAG_DOCUMENT_16',
    'FLAG_DOCUMENT_17',
    'FLAG_DOCUMENT_18',
    'FLAG_DOCUMENT_19',
    'FLAG_DOCUMENT_20',
    'FLAG_DOCUMENT_21']),
  ('pipeline-3',
   Pipeline(steps=[('imputer',
                    SimpleImputer(fill_value='Unknown', strategy='constant')),
                   ('value_formatter',
                    FunctionTransformer(func=<function <lambda> at 0x7f1e9f7aa790>)),
                   ('encoder', OneHotEncoder())]),
   ['NAME_TYPE_SUITE',
    'NAME_INCOME_TYPE',
    'NAME_EDUCATION_TYPE',
    'NAME_FAMILY_STATUS',
    'NAME_HOUSING_TYPE',
    'OCCUPATION_TYPE',
    'ORGANIZATION_TYPE',
    'FONDKAPREMONT_MODE',
    'HOUSETYPE_MODE',
    'WALLSMATERIAL_MODE'])],
 'columntransformer__verbose': False,
 'columntransformer__simpleimputer-1': SimpleImputer(strategy='median'),
 'columntransformer__simpleimputer-2': SimpleImputer(),
 'columntransformer__simpleimputer-3': SimpleImputer(strategy='median'),
 'columntransformer__simpleimputer-4': SimpleImputer(strategy='most_frequent'),
 'columntransformer__pipeline-1': Pipeline(steps=[('nan_imputer', SimpleImputer(strategy='most_frequent')),
                 ('xna_imputer',
                  SimpleImputer(missing_values='XNA', strategy='most_frequent')),
                 ('encoder',
                  OrdinalEncoder(categories=[['Cash loans', 'Revolving loans'],
                                             ['N', 'Y'], ['N', 'Y'],
                                             ['No', 'Yes'], ['M', 'F'],
                                             ['MONDAY', 'TUESDAY', 'WEDNESDAY',
                                              'THURSDAY', 'FRIDAY', 'SATURDAY',
                                              'SUNDAY']]))]),
 'columntransformer__pipeline-2': Pipeline(steps=[('imputer', SimpleImputer(strategy='most_frequent'))]),
 'columntransformer__pipeline-3': Pipeline(steps=[('imputer',
                  SimpleImputer(fill_value='Unknown', strategy='constant')),
                 ('value_formatter',
                  FunctionTransformer(func=<function <lambda> at 0x7f1e9f7aa790>)),
                 ('encoder', OneHotEncoder())]),
 'columntransformer__simpleimputer-1__add_indicator': False,
 'columntransformer__simpleimputer-1__copy': True,
 'columntransformer__simpleimputer-1__fill_value': None,
 'columntransformer__simpleimputer-1__missing_values': nan,
 'columntransformer__simpleimputer-1__strategy': 'median',
 'columntransformer__simpleimputer-1__verbose': 0,
 'columntransformer__simpleimputer-2__add_indicator': False,
 'columntransformer__simpleimputer-2__copy': True,
 'columntransformer__simpleimputer-2__fill_value': None,
 'columntransformer__simpleimputer-2__missing_values': nan,
 'columntransformer__simpleimputer-2__strategy': 'mean',
 'columntransformer__simpleimputer-2__verbose': 0,
 'columntransformer__simpleimputer-3__add_indicator': False,
 'columntransformer__simpleimputer-3__copy': True,
 'columntransformer__simpleimputer-3__fill_value': None,
 'columntransformer__simpleimputer-3__missing_values': nan,
 'columntransformer__simpleimputer-3__strategy': 'median',
 'columntransformer__simpleimputer-3__verbose': 0,
 'columntransformer__simpleimputer-4__add_indicator': False,
 'columntransformer__simpleimputer-4__copy': True,
 'columntransformer__simpleimputer-4__fill_value': None,
 'columntransformer__simpleimputer-4__missing_values': nan,
 'columntransformer__simpleimputer-4__strategy': 'most_frequent',
 'columntransformer__simpleimputer-4__verbose': 0,
 'columntransformer__pipeline-1__memory': None,
 'columntransformer__pipeline-1__steps': [('nan_imputer',
   SimpleImputer(strategy='most_frequent')),
  ('xna_imputer',
   SimpleImputer(missing_values='XNA', strategy='most_frequent')),
  ('encoder',
   OrdinalEncoder(categories=[['Cash loans', 'Revolving loans'], ['N', 'Y'],
                              ['N', 'Y'], ['No', 'Yes'], ['M', 'F'],
                              ['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY',
                               'FRIDAY', 'SATURDAY', 'SUNDAY']]))],
 'columntransformer__pipeline-1__verbose': False,
 'columntransformer__pipeline-1__nan_imputer': SimpleImputer(strategy='most_frequent'),
 'columntransformer__pipeline-1__xna_imputer': SimpleImputer(missing_values='XNA', strategy='most_frequent'),
 'columntransformer__pipeline-1__encoder': OrdinalEncoder(categories=[['Cash loans', 'Revolving loans'], ['N', 'Y'],
                            ['N', 'Y'], ['No', 'Yes'], ['M', 'F'],
                            ['MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY',
                             'FRIDAY', 'SATURDAY', 'SUNDAY']]),
 'columntransformer__pipeline-1__nan_imputer__add_indicator': False,
 'columntransformer__pipeline-1__nan_imputer__copy': True,
 'columntransformer__pipeline-1__nan_imputer__fill_value': None,
 'columntransformer__pipeline-1__nan_imputer__missing_values': nan,
 'columntransformer__pipeline-1__nan_imputer__strategy': 'most_frequent',
 'columntransformer__pipeline-1__nan_imputer__verbose': 0,
 'columntransformer__pipeline-1__xna_imputer__add_indicator': False,
 'columntransformer__pipeline-1__xna_imputer__copy': True,
 'columntransformer__pipeline-1__xna_imputer__fill_value': None,
 'columntransformer__pipeline-1__xna_imputer__missing_values': 'XNA',
 'columntransformer__pipeline-1__xna_imputer__strategy': 'most_frequent',
 'columntransformer__pipeline-1__xna_imputer__verbose': 0,
 'columntransformer__pipeline-1__encoder__categories': [['Cash loans',
   'Revolving loans'],
  ['N', 'Y'],
  ['N', 'Y'],
  ['No', 'Yes'],
  ['M', 'F'],
  ['MONDAY',
   'TUESDAY',
   'WEDNESDAY',
   'THURSDAY',
   'FRIDAY',
   'SATURDAY',
   'SUNDAY']],
 'columntransformer__pipeline-1__encoder__dtype': numpy.float64,
 'columntransformer__pipeline-1__encoder__handle_unknown': 'error',
 'columntransformer__pipeline-1__encoder__unknown_value': None,
 'columntransformer__pipeline-2__memory': None,
 'columntransformer__pipeline-2__steps': [('imputer',
   SimpleImputer(strategy='most_frequent'))],
 'columntransformer__pipeline-2__verbose': False,
 'columntransformer__pipeline-2__imputer': SimpleImputer(strategy='most_frequent'),
 'columntransformer__pipeline-2__imputer__add_indicator': False,
 'columntransformer__pipeline-2__imputer__copy': True,
 'columntransformer__pipeline-2__imputer__fill_value': None,
 'columntransformer__pipeline-2__imputer__missing_values': nan,
 'columntransformer__pipeline-2__imputer__strategy': 'most_frequent',
 'columntransformer__pipeline-2__imputer__verbose': 0,
 'columntransformer__pipeline-3__memory': None,
 'columntransformer__pipeline-3__steps': [('imputer',
   SimpleImputer(fill_value='Unknown', strategy='constant')),
  ('value_formatter',
   FunctionTransformer(func=<function <lambda> at 0x7f1e9f7aa790>)),
  ('encoder', OneHotEncoder())],
 'columntransformer__pipeline-3__verbose': False,
 'columntransformer__pipeline-3__imputer': SimpleImputer(fill_value='Unknown', strategy='constant'),
 'columntransformer__pipeline-3__value_formatter': FunctionTransformer(func=<function <lambda> at 0x7f1e9f7aa790>),
 'columntransformer__pipeline-3__encoder': OneHotEncoder(),
 'columntransformer__pipeline-3__imputer__add_indicator': False,
 'columntransformer__pipeline-3__imputer__copy': True,
 'columntransformer__pipeline-3__imputer__fill_value': 'Unknown',
 'columntransformer__pipeline-3__imputer__missing_values': nan,
 'columntransformer__pipeline-3__imputer__strategy': 'constant',
 'columntransformer__pipeline-3__imputer__verbose': 0,
 'columntransformer__pipeline-3__value_formatter__accept_sparse': False,
 'columntransformer__pipeline-3__value_formatter__check_inverse': True,
 'columntransformer__pipeline-3__value_formatter__func': <function preprocessing.<lambda>(x)>,
 'columntransformer__pipeline-3__value_formatter__inv_kw_args': None,
 'columntransformer__pipeline-3__value_formatter__inverse_func': None,
 'columntransformer__pipeline-3__value_formatter__kw_args': None,
 'columntransformer__pipeline-3__value_formatter__validate': False,
 'columntransformer__pipeline-3__encoder__categories': 'auto',
 'columntransformer__pipeline-3__encoder__drop': None,
 'columntransformer__pipeline-3__encoder__dtype': numpy.float64,
 'columntransformer__pipeline-3__encoder__handle_unknown': 'error',
 'columntransformer__pipeline-3__encoder__sparse': True,
 'randomforestclassifier__bootstrap': True,
 'randomforestclassifier__ccp_alpha': 0.0,
 'randomforestclassifier__class_weight': None,
 'randomforestclassifier__criterion': 'gini',
 'randomforestclassifier__max_depth': None,
 'randomforestclassifier__max_features': 'auto',
 'randomforestclassifier__max_leaf_nodes': None,
 'randomforestclassifier__max_samples': None,
 'randomforestclassifier__min_impurity_decrease': 0.0,
 'randomforestclassifier__min_impurity_split': None,
 'randomforestclassifier__min_samples_leaf': 1,
 'randomforestclassifier__min_samples_split': 2,
 'randomforestclassifier__min_weight_fraction_leaf': 0.0,
 'randomforestclassifier__n_estimators': 100,
 'randomforestclassifier__n_jobs': None,
 'randomforestclassifier__oob_score': False,
 'randomforestclassifier__random_state': None,
 'randomforestclassifier__verbose': 0,
 'randomforestclassifier__warm_start': False}